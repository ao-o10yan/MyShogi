

■　2018/05/10

- Util.FromUsiMove()追加
- SfenExceptionのコンストラクタ追加
- Util.FromUsiMove()追加
	- 関連するUtil.FromUsiSquare()など追加
	- Util.FromUsiFile()
	- Util.FromUsiRank()
- Util.Pretty2(this Move)用意

- 指し手生成を書かないといけないのか…
	- これ、Search()関数を書けばC#版のやねうら王が完成するのでは…。しんどすぎ


- Position::ToUsi() , SetSfen()追加
	- Position::SetSfen()で平手の初期局面をセットして、ToUsi()でUSI文字列になることを確認した。
- Exception.cs追加。
	- SfenException追加
- Util::FromUSI()追加
- ToUSI()をToUsi()とリネーム。
- ToInt()の型、UInt32ではなくInt32に変更する。
- Model/Shogi/SfenUtil.cs削除


■　2018/05/09

- 盤面を表現するPosition.csを追加
	- とりあえず構造体だけ用意
	- Bitboardも必要なのでは…
- 間違えてPieceExtensionsにColorのFlip()を入れていたの削除


- 手駒を表現する Hand.cs追加
	- extension methodでrefを使いたい。これはC# 7.2の機能らしく、buildをC# 7.2に変更。
		- cf. C# 7.2へ言語バージョンを変更したい!!! http://it-mio.com/?p=163
	- HandのToUSI()まで実装完了


- 指し手を表現する Move.cs追加
- Model.Shogi.Utilクラスをpartialに変更。それぞれのファイルに個別に書く。
	- Util.cs削除
- 各クラスのToInt()はUInt32で統一する。


- File,RankなどにIsOk() , ToInt() , Pretty() , ToUSI()を実装する。
- Model.Shogi
	- Util.cs追加。
		- CanPromote()など追加
	- Square.cs追加
		- やねうら王を元に実装
- Rank,FileのPretty()修正。


■　2018/05/08

- Pieceまわり、extension methodで書き直す。
- Color.csを用意。
- Piece.csを用意。
	- なるべく、やねうら王に合わせる。
- Rank.cs追加
- File.cs追加
- Pretty()で日本語文字列として表示できるようにしておく。
- IsOk()で正常な範囲にあるかを判定できるようにしておく。


- Model/Network , Model/TimeMan , Model/Shogi フォルダ追加
- Model/Shogi/sfen フォルダ追加
- Model/Shogi/ShogiType.cs追加
	- ここに、駒・手番・盤面の型定義を行う。
- Model/Shogi/sfen/SfenUtil.cs追加
	- この設計が良いのかどうかについて考え中。


■　2018/05/07

- 製作開始
	- Visual Studio 2017でビルドが出来るようにする
	- C#で開発していく
	- WhaleWatcherのソースコードを参考に作っていく
		- 作者のえびふらいさんとライセンス契約
		- cf. https://github.com/ebifrier/Ragnarok
	- 素材はマイナビさんに用意してもらう

- Model/View/Utilフォルダを用意。
- CsaConnectData.cs追加。
- ざざっとModelを書いていく。Viewは後回し。
